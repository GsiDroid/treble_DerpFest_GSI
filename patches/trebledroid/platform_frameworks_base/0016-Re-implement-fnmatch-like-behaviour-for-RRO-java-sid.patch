From ed98f40123a489691966a9cc2a1de9ef66e9e452 Mon Sep 17 00:00:00 2001
From: KoysX <2685697179b@gmail.com>
Date: Tue, 26 Sep 2023 22:37:36 +0800
Subject: [PATCH] Re-implement-fnmatch-like-behaviour-for-RRO-java-sid

---
 .../android/content/pm/PackageParser.java     | 13 +++++++++--
 .../parsing/FrameworkParsingPackageUtils.java | 22 +++++++++----------
 2 files changed, 22 insertions(+), 13 deletions(-)

diff --git a/core/java/android/content/pm/PackageParser.java b/core/java/android/content/pm/PackageParser.java
index 211289d5..c56d71ea 100644
--- a/core/java/android/content/pm/PackageParser.java
+++ b/core/java/android/content/pm/PackageParser.java
@@ -2545,8 +2545,17 @@ public class PackageParser {
         for (int i = 0; i < propNames.length; i++) {
             // Check property value: make sure it is both set and equal to expected value
             final String currValue = SystemProperties.get(propNames[i]);
-            if (!TextUtils.equals(currValue, propValues[i])) {
-                return false;
+            final String value = propValues[i];
+            if(value.startsWith("+")) {
+                final java.util.regex.Pattern regex = java.util.regex.Pattern.compile(value.substring(1, value.length()).replace("*", ".*"));
+                java.util.regex.Matcher matcher = regex.matcher(currValue);
+                if (!matcher.find()) {
+                    return false;
+                }
+            } else {
+                if(!value.equals(currValue)) {
+                    return false;
+                }
             }
         }
         return true;
diff --git a/core/java/android/content/pm/parsing/FrameworkParsingPackageUtils.java b/core/java/android/content/pm/parsing/FrameworkParsingPackageUtils.java
index b75ba82a..fb6f1922 100644
--- a/core/java/android/content/pm/parsing/FrameworkParsingPackageUtils.java
+++ b/core/java/android/content/pm/parsing/FrameworkParsingPackageUtils.java
@@ -214,17 +214,17 @@ public class FrameworkParsingPackageUtils {
         }
         for (int i = 0; i < propNames.length; i++) {
             final String currValue = SystemProperties.get(propNames[i]);
-            // 1. Make sure prop is set.
-            if (currValue == null) {
-                return false;
-            }
-            // 2. Check next prop if expected value is a wildcard.
-            if ("*".equals(propValues[i])) {
-                continue;
-            }
-            // 3. Check if prop is equal to expected value.
-            if (!currValue.equals(propValues[i])) {
-                return false;
+            final String value = propValues[i];
+            if(value.startsWith("+")) {
+                final java.util.regex.Pattern regex = java.util.regex.Pattern.compile(value.substring(1, value.length()).replace("*", ".*"));
+                java.util.regex.Matcher matcher = regex.matcher(currValue);
+                if (!matcher.find()) {
+                    return false;
+                }
+            } else {
+                if(!value.equals(currValue)) {
+                    return false;
+                }
             }
         }
         return true;
-- 
2.34.1

